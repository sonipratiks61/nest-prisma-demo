// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String
  mobileNumber String       @unique
  businessName String
  name         String
  gstNumber    String?
  addresses    Address[]
  attachments  Attachment[]
  roleId       Int  
  role         Role?        @relation(fields: [roleId], references: [id])
  acceptTerms Boolean
  isActive    Boolean  @default(false) // for admin approval
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  country   String
  state     String
  city      String
  pinCode   String
  address   String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id                       Int                        @id @default(autoincrement())
  capabilities             Capability[] // Linked to capabilities
  name                     String                     @unique
  roleAndCapabilityMapping RoleAndCapabilityMapping[]
  users                    User[]
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
}

model Capability {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @unique
  role                     Role                       @relation(fields: [roleId], references: [id]) // Explicit relation to Role
  roleAndCapabilityMapping RoleAndCapabilityMapping[]
  roleId                   Int
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
}

model Attachment {
  id             Int    @id @default(autoincrement())
  attachmentType String
  path           String
  user           User   @relation(fields: [userId], references: [id])
  userId         Int
}

model RoleAndCapabilityMapping {
  capabilityId Int
  roleId       Int
  capability   Capability @relation(fields: [capabilityId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([capabilityId, roleId])
}
